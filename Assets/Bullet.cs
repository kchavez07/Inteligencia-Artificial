using UnityEngine;

/// <summary>
/// Clase que representa una bala en el juego.
/// Su principal funci√≥n es detectar colisiones y aplicar da√±o.
/// </summary>
public class Bullet : MonoBehaviour
{
    [SerializeField]
    private LayerMask mask; // **Capa de colisi√≥n para la bala (Detecta Enemigos)**

    [SerializeField]
    private float damage = 10f; // **üí• Da√±o de la bala (Configurable en el Inspector)**

    [SerializeField]
    private float speed = 20f; // **Velocidad de la bala**

    [SerializeField]
    private float lifeTime = 5f; // **Duraci√≥n antes de autodestruirse**

    private Rigidbody rb;

    /// <summary>
    /// M√©todo Start: Inicializa la bala y le asigna una velocidad.
    /// </summary>
    void Start()
    {
        rb = GetComponent<Rigidbody>();
        if (rb == null)
        {
            Debug.LogError("‚ö†Ô∏è La bala no tiene un Rigidbody.");
            return;
        }

        rb.useGravity = false; // **La bala no es afectada por la gravedad**
        rb.linearVelocity = transform.forward * speed; // **üöÄ Se mueve en la direcci√≥n en la que fue disparada**
        
        Destroy(gameObject, lifeTime); // **üïí Se autodestruye despu√©s de X segundos**
    }

    /// <summary>
    /// Detecta si la bala impacta contra un objeto dentro de la capa especificada.
    /// </summary>
    /// <param name="other">Collider del objeto con el que la bala colisiona.</param>
    private void OnTriggerEnter(Collider other)
    {
        Debug.Log("üí• Impacto con: " + other.gameObject.name + " en la capa " + LayerMask.LayerToName(other.gameObject.layer));

        // **Si el objeto impactado est√° en la capa correcta, aplica da√±o**
        if (((1 << other.gameObject.layer) & mask.value) != 0)
        {
            Debug.Log("üî• Bala impact√≥ un objetivo v√°lido.");

            // **Aplica da√±o si impacta un enemigo**
            BaseEnemy enemy = other.GetComponent<BaseEnemy>();
            if (enemy != null)
            {
                enemy.TakeDamage(damage); // ‚úÖ Aplica da√±o al enemigo
            }

            Destroy(gameObject); // **üí£ Destruye la bala tras impactar**
        }
    }

    /// <summary>
    /// Devuelve la cantidad de da√±o que hace la bala.
    /// </summary>
    /// <returns>Valor de da√±o de la bala.</returns>
    public float GetDamage()
    {
        return damage;
    }
}
